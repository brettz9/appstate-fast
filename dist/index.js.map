{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import { onUnmounted, ref } from 'vue'\n\nexport type Path = ReadonlyArray<string | number>\n\nexport type SetStateAction<S> = (S | Promise<S>) | ((prevState: S) => S | Promise<S>)\n\nexport type SetPartialStateAction<S> = S extends ReadonlyArray<infer U>\n  ? ReadonlyArray<U> | Record<number, U> | ((prevValue: S) => ReadonlyArray<U> | Record<number, U>)\n  : S extends Record<string, unknown> | string\n  ? Partial<S> | ((prevValue: S) => Partial<S>)\n  : S | ((prevState: S) => S)\n\nexport type SetInitialStateAction<S> = S | Promise<S> | (() => S | Promise<S>)\n\nconst self = Symbol('self')\nconst selfMethodsID = Symbol('ProxyMarker')\nconst valueUnusedMarker = Symbol('valueUnusedMarker')\nconst unmountedMarker = Symbol('unmountedMarker')\nexport const postpone = Symbol('postpone')\nexport const none = Symbol('none') as StateValueAtPath\nexport const devToolsID = Symbol('devTools')\n\nexport type InferredStateKeysType<S> = S extends ReadonlyArray<infer _>\n  ? ReadonlyArray<number>\n  : S extends null\n  ? undefined\n  : S extends Record<string, unknown>\n  ? ReadonlyArray<keyof S>\n  : undefined\n\nexport type InferredStateOrnullType<S> = S extends undefined\n  ? undefined\n  : S extends null\n  ? null\n  : State<S>\n\nexport interface PluginStateControl<S> {\n  getUntracked(): S\n  setUntracked(newValue: SetStateAction<S>): Path[]\n  mergeUntracked(mergeValue: SetPartialStateAction<S>): Path[]\n  rerender(paths: Path[]): void\n}\n\nexport interface StateMethods<S> {\n  readonly path: Path\n  readonly keys: InferredStateKeysType<S>\n  readonly value: S\n  readonly promised: boolean\n  readonly error: StateErrorAtRoot | undefined\n  get(): S\n  set(newValue: SetStateAction<S>): void\n  merge(newValue: SetPartialStateAction<S>): void\n  nested<K extends keyof S>(key: K): State<S[K]>\n  // TODO: Figure out function types\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  batch<R, C>(action: (s: State<S>) => R, context?: Exclude<C, Function>): R\n  ornull: InferredStateOrnullType<S>\n  attach(plugin: () => Plugin): State<S>\n  attach(pluginId: symbol): [PluginCallbacks | Error, PluginStateControl<S>]\n}\n\nexport interface StateMethodsDestroy {\n  destroy(): void\n}\n\nexport type State<S> = StateMethods<S> &\n  (S extends ReadonlyArray<infer U>\n    ? ReadonlyArray<State<U>>\n    : S extends Record<string, unknown>\n    ? Omit<\n        { readonly [K in keyof Required<S>]: State<S[K]> },\n        keyof StateMethods<S> | keyof StateMethodsDestroy\n      >\n    : Record<string, unknown>)\n\n// TODO: Enumerate all possible types\nexport type StateValueAtRoot = unknown\n// TODO: Enumerate all possible types\nexport type StateValueAtPath = unknown\n// TODO: Enumerate all possible types\nexport type StateErrorAtRoot = unknown\n// TODO: Enumerate all possible types\nexport type AnyContext = unknown\n\nexport interface PluginCallbacksOnSetArgument {\n  readonly path: Path\n  readonly state?: StateValueAtRoot\n  readonly previous?: StateValueAtPath\n  readonly value?: StateValueAtPath\n  readonly merged?: StateValueAtPath\n}\n\nexport interface PluginCallbacksOnDestroyArgument {\n  readonly state?: StateValueAtRoot\n}\n\nexport interface PluginCallbacksOnBatchArgument {\n  readonly path: Path\n  readonly state?: StateValueAtRoot\n  readonly context?: AnyContext\n}\n\nexport interface PluginCallbacks {\n  readonly onSet?: (arg: PluginCallbacksOnSetArgument) => void\n  readonly onDestroy?: (arg: PluginCallbacksOnDestroyArgument) => void\n  readonly onBatchStart?: (arg: PluginCallbacksOnBatchArgument) => void\n  readonly onBatchFinish?: (arg: PluginCallbacksOnBatchArgument) => void\n}\n\nexport interface Plugin {\n  readonly id: symbol\n  readonly init?: (state: State<StateValueAtRoot>) => PluginCallbacks\n}\n\nexport function createState<S>(initial: SetInitialStateAction<S>): State<S> & StateMethodsDestroy {\n  const methods = createStore(initial).toMethods()\n\n  // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n  const devtools = createState[devToolsID]\n  if (devtools) {\n    methods.attach(devtools)\n  }\n\n  return methods.self as State<S> & StateMethodsDestroy\n}\n\nexport function useState<S>(source: SetInitialStateAction<S> | State<S>): State<S> {\n  const parentMethods =\n    typeof source === 'object' && source !== null\n      ? (source[self] as StateMethodsImpl<S> | undefined)\n      : undefined\n\n  if (parentMethods) {\n    if (parentMethods.isMounted) {\n      // Scoped state mount\n      const link = new StateMethodsImpl<S>(\n        parentMethods.state,\n        parentMethods.path,\n        parentMethods.state.get(parentMethods.path) as S,\n        parentMethods.state.edition,\n        () => {\n          /*  */\n        },\n        () => {\n          /*  */\n        },\n      )\n\n      parentMethods.subscribe(link)\n      onUnmounted(() => parentMethods.unsubscribe(link))\n\n      return link.self\n    } else {\n      // Global state mount or destroyed link\n      const state = ref(parentMethods.state)\n\n      const link = new StateMethodsImpl<S>(\n        state.value as Store,\n        parentMethods.path,\n        state.value.get(parentMethods.path) as S,\n        state.value.edition,\n        () => {\n          /*  */\n        },\n        () => {\n          /*  */\n        },\n      )\n\n      state.value.subscribe(link)\n      onUnmounted(() => state.value.unsubscribe(link))\n\n      return link.self\n    }\n  } else {\n    // Local state mount\n    const state = ref(createStore(source))\n\n    const link = new StateMethodsImpl<S>(\n      state.value as Store,\n      rootPath,\n      state.value.get(rootPath) as S,\n      state.value.edition,\n      () => {\n        /*  */\n      },\n      () => {\n        /*  */\n      },\n    )\n\n    state.value.subscribe(link)\n    onUnmounted(() => {\n      state.value.unsubscribe(link)\n      state.value.destroy()\n    })\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n    const devtools = useState[devToolsID]\n    if (devtools) {\n      link.attach(devtools)\n    }\n\n    return link.self\n  }\n}\n\nexport interface DevToolsExtensions {\n  label(name: string): void\n  log(str: string, data?: unknown): void\n}\n\nexport function devTools<S>(state: State<S>): DevToolsExtensions {\n  const plugin = state.attach(devToolsID)\n  if (plugin[0] instanceof Error) {\n    return emptyDevToolsExtensions\n  }\n  return plugin[0] as DevToolsExtensions\n}\n\nconst emptyDevToolsExtensions: DevToolsExtensions = {\n  label() {\n    /* */\n  },\n  log() {\n    /* */\n  },\n}\n\n// TODO: Fix error names\n/* eslint-disable @typescript-eslint/naming-convention */\nenum ErrorId {\n  InitStateToValueFromState = 101,\n  SetStateToValueFromState = 102,\n  GetStateWhenPromised = 103,\n  SetStateWhenPromised = 104,\n  SetStateNestedToPromised = 105,\n  SetStateWhenDestroyed = 106,\n  GetStatePropertyWhenPrimitive = 107,\n  ToJson_Value = 108,\n  ToJson_State = 109,\n  GetUnknownPlugin = 120,\n\n  SetProperty_State = 201,\n  SetProperty_Value = 202,\n  SetPrototypeOf_State = 203,\n  SetPrototypeOf_Value = 204,\n  PreventExtensions_State = 205,\n  PreventExtensions_Value = 206,\n  DefineProperty_State = 207,\n  DefineProperty_Value = 208,\n  DeleteProperty_State = 209,\n  DeleteProperty_Value = 210,\n  Construct_State = 211,\n  Construct_Value = 212,\n  Apply_State = 213,\n  Apply_Value = 214,\n}\n/* eslint-enable @typescript-eslint/naming-convention */\n\nclass StateInvalidUsageError extends Error {\n  constructor(path: Path, id: ErrorId, details?: string) {\n    super(\n      `Error: HOOKSTATE-${id} [path: /${path.join('/')}${\n        details ? `, details: ${details}` : ''\n      }]. ` + `See https://hookstate.js.org/docs/exceptions#hookstate-${id}`,\n    )\n  }\n}\n\ninterface Subscriber {\n  onSet(paths: Path[], actions: (() => void)[]): void\n}\n\ninterface Subscribable {\n  subscribe(l: Subscriber): void\n  unsubscribe(l: Subscriber): void\n}\n\nconst rootPath: Path = []\nconst destroyedEdition = -1\n\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] }\n\nclass Store implements Subscribable {\n  private _edition = 0\n\n  private readonly _subscribers: Set<Subscriber> = new Set()\n  private readonly _setSubscribers: Set<Required<PluginCallbacks>['onSet']> = new Set()\n  private readonly _destroySubscribers: Set<Required<PluginCallbacks>['onDestroy']> = new Set()\n\n  private readonly _batchStartSubscribers: Set<\n    Required<PluginCallbacks>['onBatchStart']\n  > = new Set()\n\n  private readonly _batchFinishSubscribers: Set<\n    Required<PluginCallbacks>['onBatchFinish']\n  > = new Set()\n\n  private readonly _plugins = new Map<symbol, PluginCallbacks>()\n\n  private _promised?: Promised\n\n  private _batches = 0\n  private _batchesPendingPaths?: Path[]\n  private _batchesPendingActions?: (() => void)[]\n\n  constructor(private _value: StateValueAtRoot) {\n    if (typeof _value === 'object' && Promise.resolve(_value) === _value) {\n      this._promised = this.createPromised(_value)\n      this._value = none\n    } else if (_value === none) {\n      this._promised = this.createPromised()\n    }\n  }\n\n  createPromised(newValue?: StateValueAtPath) {\n    const promised = new Promised(\n      newValue ? Promise.resolve(newValue) : undefined,\n\n      (r: StateValueAtPath) => {\n        if (this.promised === promised && this.edition !== destroyedEdition) {\n          this._promised = undefined\n          this.set(rootPath, r)\n          this.update([rootPath])\n        }\n      },\n\n      () => {\n        if (this.promised === promised && this.edition !== destroyedEdition) {\n          this._edition += 1\n          this.update([rootPath])\n        }\n      },\n\n      () => {\n        if (\n          this._batchesPendingActions &&\n          this._value !== none &&\n          this.edition !== destroyedEdition\n        ) {\n          const actions = this._batchesPendingActions\n          this._batchesPendingActions = undefined\n          for (const a of actions) {\n            a()\n          }\n        }\n      },\n    )\n\n    return promised\n  }\n\n  get edition() {\n    return this._edition\n  }\n\n  get promised() {\n    return this._promised\n  }\n\n  get(path: Path) {\n    let result = this._value\n    if (result === none) {\n      return result\n    }\n    for (const p of path) {\n      result = (result as Record<string, unknown>)[p]\n    }\n    return result\n  }\n\n  set(path: Path, value: StateValueAtPath, mergeValue?: Partial<StateValueAtPath>): Path {\n    if (this._edition < 0) {\n      throw new StateInvalidUsageError(path, ErrorId.SetStateWhenDestroyed)\n    }\n\n    if (path.length === 0) {\n      // Root value UPDATE case,\n\n      const onSetArg: Writeable<PluginCallbacksOnSetArgument> = {\n        path: path,\n        state: value,\n        value: value,\n        previous: this._value,\n        merged: mergeValue,\n      }\n\n      if (value === none) {\n        this._promised = this.createPromised()\n        delete onSetArg.value\n        delete onSetArg.state\n      } else if (typeof value === 'object' && Promise.resolve(value) === value) {\n        this._promised = this.createPromised(value)\n        value = none\n        delete onSetArg.value\n        delete onSetArg.state\n      } else if (this._promised && !this._promised.resolver && !this._promised.fullfilled) {\n        throw new StateInvalidUsageError(path, ErrorId.SetStateWhenPromised)\n      }\n\n      const prevValue = this._value\n      if (prevValue === none) {\n        delete onSetArg.previous\n      }\n\n      this._value = value\n      this.afterSet(onSetArg)\n\n      if (prevValue === none && this._value !== none && this.promised && this.promised.resolver) {\n        this.promised.resolver()\n      }\n\n      return path\n    }\n\n    if (typeof value === 'object' && Promise.resolve(value) === value) {\n      throw new StateInvalidUsageError(path, ErrorId.SetStateNestedToPromised)\n    }\n\n    let target = this._value as Record<string, unknown>\n    for (let i = 0; i < path.length - 1; i += 1) {\n      target = target[path[i]] as Record<string, unknown>\n    }\n\n    const p = path[path.length - 1]\n    if (p in target) {\n      if (value !== none) {\n        // Property UPDATE case\n        const prevValue = target[p]\n        target[p] = value\n        this.afterSet({\n          path: path,\n          state: this._value,\n          value: value,\n          previous: prevValue,\n          merged: mergeValue,\n        })\n\n        return path\n      } else {\n        // Property DELETE case\n        const prevValue = target[p]\n        if (Array.isArray(target) && typeof p === 'number') {\n          target.splice(p, 1)\n        } else {\n          delete target[p]\n        }\n        this.afterSet({\n          path: path,\n          state: this._value,\n          previous: prevValue,\n          merged: mergeValue,\n        })\n\n        // if an array of object is about to loose existing property\n        // we consider it is the whole object is changed\n        // which is identified by upper path\n        return path.slice(0, -1)\n      }\n    }\n\n    if (value !== none) {\n      // Property INSERT case\n      target[p] = value\n      this.afterSet({ path, state: this._value, value, merged: mergeValue })\n      // if an array of object is about to be extended by new property\n      // we consider it is the whole object is changed\n      // which is identified by upper path\n      return path.slice(0, -1)\n    }\n\n    // Non-existing property DELETE case\n    // no-op\n    return path\n  }\n\n  update(paths: Path[]) {\n    if (this._batches) {\n      this._batchesPendingPaths = this._batchesPendingPaths ?? []\n      this._batchesPendingPaths = this._batchesPendingPaths.concat(paths)\n      return\n    }\n\n    const actions: (() => void)[] = []\n    this._subscribers.forEach(s => s.onSet(paths, actions))\n    actions.forEach(a => a())\n  }\n\n  afterSet(params: PluginCallbacksOnSetArgument) {\n    if (this._edition !== destroyedEdition) {\n      this._edition += 1\n      for (const cb of this._setSubscribers) {\n        cb(params)\n      }\n    }\n  }\n\n  startBatch(path: Path, options?: { context?: AnyContext }): void {\n    this._batches += 1\n\n    const cbArgument: Writeable<PluginCallbacksOnBatchArgument> = {\n      path: path,\n    }\n\n    if (options && 'context' in options) {\n      cbArgument.context = options.context\n    }\n\n    if (this._value !== none) {\n      cbArgument.state = this._value\n    }\n\n    this._batchStartSubscribers.forEach(cb => cb(cbArgument))\n  }\n\n  finishBatch(path: Path, options?: { context?: AnyContext }): void {\n    const cbArgument: Writeable<PluginCallbacksOnBatchArgument> = {\n      path: path,\n    }\n\n    if (options && 'context' in options) {\n      cbArgument.context = options.context\n    }\n\n    if (this._value !== none) {\n      cbArgument.state = this._value\n    }\n\n    this._batchFinishSubscribers.forEach(cb => cb(cbArgument))\n\n    this._batches -= 1\n    if (this._batches === 0) {\n      if (this._batchesPendingPaths) {\n        const paths = this._batchesPendingPaths\n        this._batchesPendingPaths = undefined\n        this.update(paths)\n      }\n    }\n  }\n\n  postponeBatch(action: () => void): void {\n    this._batchesPendingActions = this._batchesPendingActions ?? []\n    this._batchesPendingActions.push(action)\n  }\n\n  getPlugin(pluginId: symbol) {\n    return this._plugins.get(pluginId)\n  }\n\n  register(plugin: Plugin) {\n    const existingInstance = this._plugins.get(plugin.id)\n    if (existingInstance) {\n      return\n    }\n\n    const pluginCallbacks = plugin.init ? plugin.init(this.toMethods().self) : {}\n    this._plugins.set(plugin.id, pluginCallbacks)\n\n    if (pluginCallbacks.onSet) {\n      this._setSubscribers.add(p => pluginCallbacks.onSet?.(p))\n    }\n\n    if (pluginCallbacks.onDestroy) {\n      this._destroySubscribers.add(p => pluginCallbacks.onDestroy?.(p))\n    }\n\n    if (pluginCallbacks.onBatchStart) {\n      this._batchStartSubscribers.add(p => pluginCallbacks.onBatchStart?.(p))\n    }\n\n    if (pluginCallbacks.onBatchFinish) {\n      this._batchFinishSubscribers.add(p => pluginCallbacks.onBatchFinish?.(p))\n    }\n  }\n\n  toMethods() {\n    return new StateMethodsImpl<StateValueAtRoot>(\n      this,\n      rootPath,\n      this.get(rootPath),\n      this.edition,\n      () => {\n        /*  */\n      },\n      () => {\n        /*  */\n      },\n    )\n  }\n\n  subscribe(l: Subscriber) {\n    this._subscribers.add(l)\n  }\n\n  unsubscribe(l: Subscriber) {\n    this._subscribers.delete(l)\n  }\n\n  destroy() {\n    this._destroySubscribers.forEach(cb => cb(this._value !== none ? { state: this._value } : {}))\n    this._edition = destroyedEdition\n  }\n\n  toJSON() {\n    throw new StateInvalidUsageError(rootPath, ErrorId.ToJson_Value)\n  }\n}\n\n// TODO: Replace with hooks and refs\nclass Promised {\n  public fullfilled?: true\n  public error?: StateErrorAtRoot\n  public resolver?: () => void\n\n  constructor(\n    public promise: Promise<StateValueAtPath> | undefined,\n    onResolve: (r: StateValueAtPath) => void,\n    onReject: () => void,\n    onPostResolve: () => void,\n  ) {\n    if (!promise) {\n      promise = new Promise<StateValueAtRoot>(resolve => {\n        this.resolver = resolve\n      })\n    }\n    this.promise = promise\n      .then(r => {\n        this.fullfilled = true\n        if (!this.resolver) {\n          onResolve(r)\n        }\n      })\n      .catch(error => {\n        this.fullfilled = true\n        this.error = error as Error\n        onReject()\n      })\n      .then(() => onPostResolve())\n  }\n}\n\nfunction onSetUsedNoAction() {\n  /** no action callback */\n}\n\nonSetUsedNoAction[unmountedMarker] = true\n\nclass StateMethodsImpl<S>\n  implements StateMethods<S>, StateMethodsDestroy, Subscribable, Subscriber {\n  private subscribers: Set<Subscriber> | undefined\n  private childrenCache: Record<string | number, StateMethodsImpl<StateValueAtPath>> | undefined\n  private selfCache: State<S> | undefined\n  private valueCache: StateValueAtPath = valueUnusedMarker\n\n  constructor(\n    public readonly state: Store,\n    public readonly path: Path,\n    private valueSource: S,\n    private valueEdition: number,\n    public readonly onGetUsed: () => void,\n    private readonly onSetUsed: () => void,\n  ) {}\n\n  getUntracked(allowPromised?: boolean) {\n    this.onGetUsed()\n\n    if (this.valueEdition !== this.state.edition) {\n      this.valueSource = this.state.get(this.path) as S\n      this.valueEdition = this.state.edition\n\n      if (this.isMounted) {\n        // this link is still mounted to a component\n        // populate cache again to ensure correct tracking of usage\n        // when React scans which states to rerender on update\n        if (this.valueCache !== valueUnusedMarker) {\n          this.valueCache = valueUnusedMarker\n          this.get(true) // renew cache to keep it marked used\n        }\n      } else {\n        // This link is not mounted to a component\n        // for example, it might be global link or\n        // a link which has been discarded after rerender\n        // but still captured by some callback or an effect.\n        // If we are here and if it was mounted before,\n        // it means it has not been garbage collected\n        // when a component unmounted.\n        // We take this opportunity to clean up caches\n        // to avoid memory leaks via stale children states cache.\n        this.valueCache = valueUnusedMarker\n        delete this.childrenCache\n        delete this.selfCache\n      }\n    }\n    if (this.valueSource === none && !allowPromised) {\n      if (this.state.promised?.error) {\n        throw this.state.promised.error\n      }\n      throw new StateInvalidUsageError(this.path, ErrorId.GetStateWhenPromised)\n    }\n    return this.valueSource\n  }\n\n  get(allowPromised?: boolean) {\n    const currentValue = this.getUntracked(allowPromised)\n    if (this.valueCache === valueUnusedMarker) {\n      if (Array.isArray(currentValue)) {\n        this.valueCache = this.valueArrayImpl(currentValue)\n      } else if (typeof currentValue === 'object' && currentValue !== null) {\n        this.valueCache = this.valueObjectImpl(currentValue as Record<string, unknown>)\n      } else {\n        this.valueCache = currentValue\n      }\n    }\n    return this.valueCache as S\n  }\n\n  get value(): S {\n    return this.get()\n  }\n\n  setUntracked(newValue: SetStateAction<S>, mergeValue?: Partial<StateValueAtPath>): [Path] {\n    if (typeof newValue === 'function') {\n      newValue = (newValue as (prevValue: S) => S)(this.getUntracked())\n    }\n\n    if (typeof newValue === 'object' && newValue !== null && newValue[selfMethodsID]) {\n      throw new StateInvalidUsageError(this.path, ErrorId.SetStateToValueFromState)\n    }\n\n    return [this.state.set(this.path, newValue, mergeValue)]\n  }\n\n  set(newValue: SetStateAction<S>) {\n    this.state.update(this.setUntracked(newValue))\n  }\n\n  mergeUntracked(sourceValue: SetPartialStateAction<S>): Path[] {\n    const currentValue = this.getUntracked()\n\n    if (typeof sourceValue === 'function') {\n      // TODO: Proper types\n      sourceValue = sourceValue(currentValue) as SetPartialStateAction<S>\n    }\n\n    let updatedPaths: [Path]\n    let deletedOrInsertedProps = false\n\n    if (Array.isArray(currentValue)) {\n      if (Array.isArray(sourceValue)) {\n        return this.setUntracked((currentValue.concat(sourceValue) as unknown) as S, sourceValue)\n      } else {\n        const deletedIndexes: number[] = []\n\n        for (const i of Object.keys(sourceValue).sort()) {\n          const index = Number(i)\n          // TODO: Proper types\n          const newPropValue = sourceValue[index] as unknown\n          if (newPropValue === none) {\n            deletedOrInsertedProps = true\n            deletedIndexes.push(index)\n          } else {\n            deletedOrInsertedProps = deletedOrInsertedProps || !(index in currentValue)\n            currentValue[index] = newPropValue\n          }\n        }\n\n        // indexes are ascending sorted as per above\n        // so, delete one by one from the end\n        // this way index positions do not change\n        for (const p of deletedIndexes.reverse()) {\n          currentValue.splice(p, 1)\n        }\n        updatedPaths = this.setUntracked(currentValue, sourceValue)\n      }\n    } else if (typeof currentValue === 'object' && currentValue !== null) {\n      Object.keys(sourceValue).forEach(key => {\n        // TODO: Proper types\n        const newPropValue = sourceValue[key] as unknown\n        if (newPropValue === none) {\n          deletedOrInsertedProps = true\n          delete currentValue[key]\n        } else {\n          deletedOrInsertedProps = deletedOrInsertedProps || !(key in currentValue)\n          currentValue[key] = newPropValue\n        }\n      })\n      updatedPaths = this.setUntracked(currentValue, sourceValue)\n    } else if (typeof currentValue === 'string') {\n      return this.setUntracked(((currentValue + String(sourceValue)) as unknown) as S, sourceValue)\n    } else {\n      return this.setUntracked(sourceValue as S)\n    }\n\n    if (updatedPaths.length !== 1 || updatedPaths[0] !== this.path || deletedOrInsertedProps) {\n      return updatedPaths\n    }\n\n    const updatedPath = updatedPaths[0]\n    return Object.keys(sourceValue).map(p => updatedPath.slice().concat(p))\n  }\n\n  merge(sourceValue: SetPartialStateAction<S>) {\n    this.state.update(this.mergeUntracked(sourceValue))\n  }\n\n  nested<K extends keyof S>(key: K): State<S[K]> {\n    return this.child(key as string | number).self as State<S[K]>\n  }\n\n  rerender(paths: Path[]) {\n    this.state.update(paths)\n  }\n\n  destroy(): void {\n    this.state.destroy()\n  }\n\n  subscribe(l: Subscriber) {\n    if (this.subscribers === undefined) {\n      this.subscribers = new Set()\n    }\n    this.subscribers.add(l)\n  }\n\n  unsubscribe(l: Subscriber) {\n    this.subscribers?.delete(l)\n  }\n\n  get isMounted(): boolean {\n    return !this.onSetUsed[unmountedMarker]\n  }\n\n  onUnmount() {\n    this.onSetUsed[unmountedMarker] = true\n  }\n\n  onSet(paths: Path[], actions: (() => void)[]): boolean {\n    const update = () => {\n      for (const path of paths) {\n        const firstChildKey = path[this.path.length]\n\n        if (firstChildKey === undefined) {\n          if (this.valueCache !== valueUnusedMarker) {\n            return true\n          }\n        } else {\n          const firstChildValue = this.childrenCache?.[firstChildKey]\n          if (firstChildValue?.onSet(paths, actions)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n\n    const updated = update()\n    if (!updated && this.subscribers !== undefined) {\n      for (const s of this.subscribers) {\n        s.onSet(paths, actions)\n      }\n    }\n\n    return updated\n  }\n\n  get keys(): InferredStateKeysType<S> {\n    const value = this.get()\n\n    if (Array.isArray(value)) {\n      return (Object.keys(value)\n        .map(i => Number(i))\n        .filter(i => Number.isInteger(i)) as unknown) as InferredStateKeysType<S>\n    }\n\n    if (typeof value === 'object' && value !== null) {\n      return (Object.keys(value) as unknown) as InferredStateKeysType<S>\n    }\n\n    return undefined as InferredStateKeysType<S>\n  }\n\n  child(key: number | string) {\n    // if this state is not mounted to a hook,\n    // we do not cache children to avoid unnecessary memory leaks\n    if (this.isMounted) {\n      this.childrenCache = this.childrenCache ?? {}\n      const cachehit = this.childrenCache[key]\n      if (cachehit) {\n        return cachehit\n      }\n    }\n\n    const r = new StateMethodsImpl(\n      this.state,\n      this.path.slice().concat(key),\n      this.valueSource[key],\n      this.valueEdition,\n      () => {\n        /*  */\n      },\n      () => {\n        /*  */\n      },\n    )\n\n    if (this.childrenCache) {\n      this.childrenCache[key] = r as StateMethodsImpl<unknown>\n    }\n\n    return r as StateMethodsImpl<unknown>\n  }\n\n  private valueArrayImpl(currentValue: StateValueAtPath[]): S {\n    return (proxyWrap(\n      this.path,\n      currentValue as Record<symbol, unknown>,\n      () => currentValue,\n\n      (target: unknown, key: PropertyKey) => {\n        if (key === 'length') {\n          return (target as []).length\n        }\n\n        if (key in Array.prototype) {\n          return Array.prototype[key] as unknown\n        }\n\n        if (key === selfMethodsID) {\n          return this\n        }\n\n        if (typeof key === 'symbol') {\n          // allow clients to associate hidden cache with state values\n          // TODO: Figure out symbol indexing\n          return (target as Record<symbol, unknown>)[key] as unknown\n        }\n\n        const index = Number(key)\n        if (!Number.isInteger(index)) {\n          return\n        }\n\n        return this.child(index).get()\n      },\n\n      (target: unknown, key: PropertyKey, value: StateValueAtPath) => {\n        if (typeof key === 'symbol') {\n          // allow clients to associate hidden cache with state values\n          // TODO: Figure out symbol indexing\n          ;(target as Record<symbol, unknown>)[key] = value\n          return true\n        }\n        throw new StateInvalidUsageError(this.path, ErrorId.SetProperty_Value)\n      },\n\n      true,\n    ) as unknown) as S\n  }\n\n  private valueObjectImpl(currentValue: Record<string, unknown>): S {\n    return (proxyWrap(\n      this.path,\n      currentValue,\n      () => currentValue,\n\n      (target: unknown, key: PropertyKey) => {\n        if (key === selfMethodsID) {\n          return this\n        }\n\n        if (typeof key === 'symbol') {\n          // allow clients to associate hidden cache with state values\n          // TODO: Figure out symbol indexing\n          return (target as Record<symbol, unknown>)[key] as unknown\n        }\n        return this.child(key).get()\n      },\n\n      (target: unknown, key: PropertyKey, value: StateValueAtPath) => {\n        if (typeof key === 'symbol') {\n          // allow clients to associate hidden cache with state values\n          // TODO: Figure out symbol indexing\n          ;(target as Record<symbol, unknown>)[key] = value\n          return true\n        }\n        throw new StateInvalidUsageError(this.path, ErrorId.SetProperty_Value)\n      },\n\n      true,\n    ) as unknown) as S\n  }\n\n  get self(): State<S> {\n    if (this.selfCache) {\n      return this.selfCache\n    }\n\n    const getter = (_: unknown, key: PropertyKey) => {\n      if (key === self) {\n        return this\n      }\n\n      if (typeof key === 'symbol') {\n        return\n      }\n\n      if (key === 'toJSON') {\n        throw new StateInvalidUsageError(this.path, ErrorId.ToJson_State)\n      }\n\n      switch (key) {\n        case 'path':\n          return this.path\n        case 'keys':\n          return this.keys\n        case 'value':\n          return this.value\n        case 'ornull':\n          return this.ornull\n        case 'promised':\n          return this.promised\n        case 'error':\n          return this.error\n        case 'get':\n          return () => this.get()\n        case 'set':\n          return (p: SetStateAction<S>) => this.set(p)\n        case 'merge':\n          return (p: SetPartialStateAction<S>) => this.merge(p)\n        case 'nested':\n          return (p: keyof S) => this.nested(p)\n        case 'batch':\n          // TODO: Figure out function types\n          // eslint-disable-next-line @typescript-eslint/ban-types\n          return <R, C>(action: () => R, context: Exclude<C, Function>) =>\n            this.batch(action, context)\n        case 'attach':\n          return (p: symbol) => this.attach(p)\n        case 'destroy': {\n          return () => this.destroy()\n        }\n        default:\n        // fall down\n      }\n\n      const currentValue = this.get()\n\n      if (\n        // if currentValue is primitive type\n        (typeof currentValue !== 'object' || currentValue === null) &&\n        // if promised, it will be none\n        currentValue !== none\n      ) {\n        throw new StateInvalidUsageError(this.path, ErrorId.GetStatePropertyWhenPrimitive)\n      }\n\n      if (Array.isArray(currentValue)) {\n        if (key === 'length') {\n          return currentValue.length\n        }\n        if (key in Array.prototype) {\n          return Array.prototype[key] as unknown\n        }\n        const index = Number(key)\n        if (!Number.isInteger(index)) {\n          return\n        }\n        return this.nested(index as keyof S)\n      }\n\n      return this.nested(key.toString() as keyof S)\n    }\n\n    this.selfCache = (proxyWrap(\n      this.path,\n      this.valueSource as Record<string, unknown>,\n      () => {\n        this.get() // get latest & mark used\n        return this.valueSource\n      },\n      getter,\n      () => {\n        throw new StateInvalidUsageError(this.path, ErrorId.SetProperty_State)\n      },\n      false,\n    ) as unknown) as State<S>\n\n    return this.selfCache\n  }\n\n  get promised() {\n    const currentValue = this.get(true) // marks used\n    if (currentValue === none && this.state.promised && !this.state.promised.fullfilled) {\n      return true\n    }\n    return false\n  }\n\n  get error() {\n    const currentValue = this.get(true) // marks used\n\n    if (currentValue === none) {\n      if (this.state.promised?.fullfilled) {\n        return this.state.promised.error\n      }\n      this.get() // will throw 'read while promised' exception\n    }\n\n    return\n  }\n\n  // TODO: Figure out function types\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  batch<R, C>(action: (s: State<S>) => R, context?: Exclude<C, Function>): R {\n    const opts = { context }\n    try {\n      this.state.startBatch(this.path, opts)\n      const result = action(this.self)\n\n      if (((result as unknown) as symbol) === postpone) {\n        this.state.postponeBatch(() => this.batch(action, context))\n      }\n\n      return result\n    } finally {\n      this.state.finishBatch(this.path, opts)\n    }\n  }\n\n  get ornull(): InferredStateOrnullType<S> {\n    const value = this.get()\n    if (value === null || value === undefined) {\n      return value as InferredStateOrnullType<S>\n    }\n    return this.self as InferredStateOrnullType<S>\n  }\n\n  attach(plugin: () => Plugin): State<S>\n  attach(pluginId: symbol): [PluginCallbacks | Error, PluginStateControl<S>]\n  attach(p: (() => Plugin) | symbol): State<S> | [PluginCallbacks | Error, PluginStateControl<S>] {\n    if (typeof p === 'function') {\n      const pluginMeta = p()\n      this.state.register(pluginMeta)\n      return this.self\n    } else {\n      const plugin =\n        this.state.getPlugin(p) ??\n        new StateInvalidUsageError(this.path, ErrorId.GetUnknownPlugin, p.toString())\n\n      return [plugin, this]\n    }\n  }\n}\n\nfunction proxyWrap(\n  path: Path,\n  targetBootstrap: Record<string, unknown>,\n  targetGetter: () => unknown,\n  propertyGetter: (unused: unknown, key: PropertyKey) => unknown,\n  propertySetter: (unused: unknown, p: PropertyKey, value: unknown, receiver: unknown) => boolean,\n  isValueProxy: boolean,\n) {\n  const onInvalidUsage = (op: ErrorId) => {\n    throw new StateInvalidUsageError(path, op)\n  }\n\n  if (typeof targetBootstrap !== 'object' || targetBootstrap === null) {\n    targetBootstrap = {}\n  }\n\n  // TODO: Figure out proxy types\n  return new Proxy(targetBootstrap, {\n    get: propertyGetter,\n    set: propertySetter,\n\n    getPrototypeOf: () => {\n      // should satisfy the invariants:\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getPrototypeOf#Invariants\n      const targetReal = targetGetter()\n      if (targetReal === undefined || targetReal === null) {\n        return null\n      }\n      return Object.getPrototypeOf(targetReal) as Record<string, unknown>\n    },\n\n    isExtensible: () => {\n      // should satisfy the invariants:\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/isExtensible#Invariants\n      return true // required to satisfy the invariants of the getPrototypeOf\n    },\n\n    getOwnPropertyDescriptor: (_, p) => {\n      const targetReal = targetGetter()\n      if (targetReal === undefined || targetReal === null) {\n        return\n      }\n\n      const origin = Object.getOwnPropertyDescriptor(targetReal, p)\n      if (origin && Array.isArray(targetReal) && p in Array.prototype) {\n        return origin\n      }\n\n      return (\n        origin && {\n          configurable: true, // JSON.stringify() does not work for an object without it\n          enumerable: origin.enumerable,\n          get: () => propertyGetter(targetReal, p),\n          set: undefined,\n        }\n      )\n    },\n\n    has: (_, p) => {\n      if (typeof p === 'symbol') {\n        return false\n      }\n\n      const targetReal = targetGetter()\n\n      if (typeof targetReal === 'object' && targetReal !== null) {\n        return p in targetReal\n      }\n\n      return false\n    },\n\n    enumerate: () => {\n      const targetReal = targetGetter()\n\n      if (Array.isArray(targetReal)) {\n        return Object.keys(targetReal).concat('length')\n      }\n\n      if (targetReal === undefined || targetReal === null) {\n        return []\n      }\n\n      return Object.keys(targetReal as Record<string, unknown>)\n    },\n\n    ownKeys: () => {\n      const targetReal = targetGetter()\n\n      if (Array.isArray(targetReal)) {\n        return Object.keys(targetReal).concat('length')\n      }\n\n      if (targetReal === undefined || targetReal === null) {\n        return []\n      }\n\n      return Object.keys(targetReal as Record<string, unknown>)\n    },\n\n    apply: () => onInvalidUsage(isValueProxy ? ErrorId.Apply_State : ErrorId.Apply_Value),\n\n    preventExtensions: () =>\n      onInvalidUsage(\n        isValueProxy ? ErrorId.PreventExtensions_State : ErrorId.PreventExtensions_Value,\n      ),\n\n    setPrototypeOf: () =>\n      onInvalidUsage(isValueProxy ? ErrorId.SetPrototypeOf_State : ErrorId.SetPrototypeOf_Value),\n\n    deleteProperty: () =>\n      onInvalidUsage(isValueProxy ? ErrorId.DeleteProperty_State : ErrorId.DeleteProperty_Value),\n\n    defineProperty: () =>\n      onInvalidUsage(isValueProxy ? ErrorId.DefineProperty_State : ErrorId.DefineProperty_Value),\n\n    construct: () =>\n      onInvalidUsage(isValueProxy ? ErrorId.Construct_State : ErrorId.Construct_Value),\n  })\n}\n\nfunction createStore<S>(initial: SetInitialStateAction<S>): Store {\n  let initialValue: S | Promise<S> = initial as S | Promise<S>\n\n  if (typeof initial === 'function') {\n    initialValue = (initial as () => S | Promise<S>)()\n  }\n\n  if (typeof initialValue === 'object' && initialValue !== null && initialValue[selfMethodsID]) {\n    throw new StateInvalidUsageError(rootPath, ErrorId.InitStateToValueFromState)\n  }\n\n  return new Store(initialValue)\n}\n"],"names":["onUnmounted","ref"],"mappings":"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"}