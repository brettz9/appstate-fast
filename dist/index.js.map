{"version":3,"file":"index.js","sources":["../node_modules/.pnpm/tslib@2.0.0/node_modules/tslib/tslib.es6.js","../src/index.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import React from 'react'\r\n\r\n///\r\n/// EXPOTED SYMBOLS (LIBRARY INTERFACE)\r\n///\r\n\r\n/**\r\n * 'JSON path' from root of a state object to a nested property.\r\n * Return type of [StateMethod.path](#readonly-path).\r\n *\r\n * For example, an object `{ a: [{ b: 1 }, { 1000: 'value' }, '3rd'] }`,\r\n * has got the following paths pointing to existing properties:\r\n *\r\n * - `[]`\r\n * - `['a']`\r\n * - `['a', 0]`\r\n * - `['a', 0, 'b']`\r\n * - `['a', 1]`\r\n * - `['a', 1, 1000]`\r\n * - `['a', 2]`\r\n */\r\nexport type Path = ReadonlyArray<string | number>\r\n\r\n/**\r\n * Type of an argument of [StateMethods.set](#set).\r\n *\r\n * @typeparam S Type of a value of a state\r\n */\r\nexport type SetStateAction<S> = (S | Promise<S>) | ((prevState: S) => S | Promise<S>)\r\n\r\n/**\r\n * Type of an argument of [StateMethods.merge](#merge).\r\n *\r\n * @typeparam S Type of a value of a state\r\n */\r\nexport type SetPartialStateAction<S> = S extends ReadonlyArray<infer U>\r\n  ? ReadonlyArray<U> | Record<number, U> | ((prevValue: S) => ReadonlyArray<U> | Record<number, U>)\r\n  : S extends object | string\r\n  ? Partial<S> | ((prevValue: S) => Partial<S>)\r\n  : React.SetStateAction<S>\r\n\r\n/**\r\n * Type of an argument of [createState](#createstate) and [useState](#usestate).\r\n *\r\n * @typeparam S Type of a value of a state\r\n */\r\nexport type SetInitialStateAction<S> = S | Promise<S> | (() => S | Promise<S>)\r\n\r\n/**\r\n * Special symbol which might be returned by onPromised callback of [StateMethods.map](#map) function.\r\n *\r\n * [Learn more...](https://hookstate.js.org/docs/asynchronous-state#executing-an-action-when-state-is-loaded)\r\n */\r\nexport const postpone = Symbol('postpone')\r\n\r\n/**\r\n * Special symbol which might be used to delete properties\r\n * from an object calling [StateMethods.set](#set) or [StateMethods.merge](#merge).\r\n *\r\n * [Learn more...](https://hookstate.js.org/docs/nested-state#deleting-existing-element)\r\n */\r\nexport const none = Symbol('none') as StateValueAtPath\r\n\r\n/**\r\n * Return type of [StateMethods.keys](#readonly-keys).\r\n *\r\n * @typeparam S Type of a value of a state\r\n */\r\nexport type InferredStateKeysType<S> = S extends ReadonlyArray<infer _>\r\n  ? ReadonlyArray<number>\r\n  : S extends null\r\n  ? undefined\r\n  : S extends object\r\n  ? ReadonlyArray<keyof S>\r\n  : undefined\r\n\r\n/**\r\n * Return type of [StateMethods.map()](#map).\r\n *\r\n * @typeparam S Type of a value of a state\r\n */\r\nexport type InferredStateOrnullType<S> = S extends undefined\r\n  ? undefined\r\n  : S extends null\r\n  ? null\r\n  : State<S>\r\n\r\n/**\r\n * For plugin developers only.\r\n * An instance to manipulate the state in more controlled way.\r\n *\r\n * @typeparam S Type of a value of a state\r\n *\r\n * [Learn more...](https://hookstate.js.org/docs/writing-plugin)\r\n */\r\nexport interface PluginStateControl<S> {\r\n  /**\r\n   * Get state value, but do not leave the traces of reading it.\r\n   */\r\n  getUntracked(): S\r\n  /**\r\n   * Set new state value, but do not trigger rerender.\r\n   *\r\n   * @param newValue new value to set to a state.\r\n   */\r\n  setUntracked(newValue: SetStateAction<S>): Path[]\r\n  /**\r\n   * Merge new state value, but do not trigger rerender.\r\n   *\r\n   * @param mergeValue new partial value to merge with the current state value and set.\r\n   */\r\n  mergeUntracked(mergeValue: SetPartialStateAction<S>): Path[]\r\n  /**\r\n   * Trigger rerender for hooked states, where values at the specified paths are used.\r\n   *\r\n   * @param paths paths of the state variables to search for being used by components and rerender\r\n   */\r\n  rerender(paths: Path[]): void\r\n}\r\n\r\n/**\r\n * An interface to manage a state in Hookstate.\r\n *\r\n * @typeparam S Type of a value of a state\r\n */\r\nexport interface StateMethods<S> {\r\n  /**\r\n   * 'Javascript' object 'path' to an element relative to the root object\r\n   * in the state. For example:\r\n   *\r\n   * ```tsx\r\n   * const state = useState([{ name: 'First Task' }])\r\n   * state.path IS []\r\n   * state[0].path IS [0]\r\n   * state.[0].name.path IS [0, 'name']\r\n   * ```\r\n   */\r\n  readonly path: Path\r\n\r\n  /**\r\n   * Return the keys of nested states.\r\n   * For a given state of [State](#state) type,\r\n   * `state.keys` will be structurally equal to Object.keys(state),\r\n   * with two minor difference:\r\n   * 1. if `state.value` is an array, the returned result will be\r\n   * an array of numbers, not strings like with `Object.keys`.\r\n   * 2. if `state.value` is not an object, the returned result will be undefined.\r\n   */\r\n  readonly keys: InferredStateKeysType<S>\r\n\r\n  /**\r\n   * Unwraps and returns the underlying state value referred by\r\n   * [path](#readonly-path) of this state instance.\r\n   *\r\n   * It returns the same result as [StateMethods.get](#get) method.\r\n   *\r\n   * This property is more useful than [get](#get) method for the cases,\r\n   * when a value may hold null or undefined values.\r\n   * Typescript compiler does not handle elimination of undefined with get(),\r\n   * like in the following examples, but value does:\r\n   *\r\n   * ```tsx\r\n   * const state = useState<number | undefined>(0)\r\n   * const myvalue: number = state.value\r\n   *      ? state.value + 1\r\n   *      : 0; // <-- compiles\r\n   * const myvalue: number = state.get()\r\n   *      ? state.get() + 1\r\n   *      : 0; // <-- does not compile\r\n   * ```\r\n   */\r\n  readonly value: S\r\n\r\n  /**\r\n   * True if state value is not yet available (eg. equal to a promise)\r\n   */\r\n  readonly promised: boolean\r\n\r\n  /**\r\n   * If a state was set to a promise and the promise was rejected,\r\n   * this property will return the error captured from the promise rejection\r\n   */\r\n  readonly error: StateErrorAtRoot | undefined\r\n\r\n  /**\r\n   * Unwraps and returns the underlying state value referred by\r\n   * [path](#readonly-path) of this state instance.\r\n   *\r\n   * It returns the same result as [StateMethods.value](#readonly-value) method.\r\n   */\r\n  get(): S\r\n\r\n  /**\r\n   * Sets new value for a state.\r\n   * If `this.path === []`,\r\n   * it is similar to the `setState` variable returned by `React.useState` hook.\r\n   * If `this.path !== []`, it sets only the segment of the state value, pointed out by the path.\r\n   * Unlike [merge](#merge) method, this method will not accept partial updates.\r\n   * Partial updates can be also done by walking the nested states and setting those.\r\n   *\r\n   * @param newValue new value to set to a state.\r\n   * It can be a value, a promise resolving to a value\r\n   * (only if [this.path](#readonly-path) is `[]`),\r\n   * or a function returning one of these.\r\n   * The function receives the current state value as an argument.\r\n   */\r\n  set(newValue: SetStateAction<S>): void\r\n\r\n  /**\r\n   * Similarly to [set](#set) method updates state value.\r\n   *\r\n   * - If current state value is an object, it does partial update for the object.\r\n   * - If state value is an array and the argument is an array too,\r\n   * it concatenates the current value with the value of the argument and sets it to the state.\r\n   * - If state value is an array and the `merge` argument is an object,\r\n   * it does partial update for the current array value.\r\n   * - If current state value is a string, it concatenates the current state\r\n   * value with the argument converted to string and sets the result to the state.\r\n   */\r\n  merge(newValue: SetPartialStateAction<S>): void\r\n\r\n  /**\r\n   * Returns nested state by key.\r\n   * `state.nested('myprop')` returns the same as `state.myprop` or `state['myprop']`,\r\n   * but also works for properties, which names collide with names of state methods.\r\n   *\r\n   * [Learn more about nested states...](https://hookstate.js.org/docs/nested-state)\r\n   *\r\n   * @param key child property name or index\r\n   */\r\n  nested<K extends keyof S>(key: K): State<S[K]>\r\n\r\n  /**\r\n   * Runs the provided action callback with optimised re-rendering.\r\n   * Updating state within a batch action does not trigger immediate rerendering.\r\n   * Instead, all required rerendering is done once the batch is finished.\r\n   *\r\n   * [Learn more about batching...](https://hookstate.js.org/docs/performance-batched-updates\r\n   *\r\n   * @param action callback function to execute in a batch\r\n   *\r\n   * @param context custom user's value, which is passed to plugins\r\n   */\r\n  batch<R, C>(action: (s: State<S>) => R, context?: Exclude<C, Function>): R\r\n\r\n  /**\r\n   * If state value is null or undefined, returns state value.\r\n   * Otherwise, it returns this state instance but\r\n   * with null and undefined removed from the type parameter.\r\n   *\r\n   * [Learn more...](https://hookstate.js.org/docs/nullable-state)\r\n   */\r\n  ornull: InferredStateOrnullType<S>\r\n\r\n  /**\r\n   * Adds plugin to the state.\r\n   *\r\n   * [Learn more...](https://hookstate.js.org/docs/extensions-overview)\r\n   */\r\n  attach(plugin: () => Plugin): State<S>\r\n\r\n  /**\r\n   * For plugin developers only.\r\n   * It is a method to get the instance of the previously attached plugin.\r\n   * If a plugin has not been attached to a state,\r\n   * it returns an Error as the first element.\r\n   * A plugin may trhow an error to indicate that plugin has not been attached.\r\n   *\r\n   * [Learn more...](https://hookstate.js.org/docs/writing-plugin)\r\n   */\r\n  attach(pluginId: symbol): [PluginCallbacks | Error, PluginStateControl<S>]\r\n}\r\n\r\n/**\r\n * Mixin for the [StateMethods](#interfacesstatemethodsmd) for a [State](#state),\r\n * which can be destroyed by a client.\r\n */\r\nexport interface StateMethodsDestroy {\r\n  /**\r\n   * Destroys an instance of a state, so\r\n   * it can clear the allocated native resources (if any)\r\n   * and can not be used anymore after it has been destroyed.\r\n   */\r\n  destroy(): void\r\n}\r\n\r\n/**\r\n * Type of a result of [createState](#createstate) and [useState](#usestate) functions\r\n *\r\n * @typeparam S Type of a value of a state\r\n *\r\n * [Learn more about global states...](https://hookstate.js.org/docs/global-state)\r\n * [Learn more about local states...](https://hookstate.js.org/docs/local-state)\r\n * [Learn more about nested states...](https://hookstate.js.org/docs/nested-state)\r\n */\r\nexport type State<S> = StateMethods<S> &\r\n  (S extends ReadonlyArray<infer U>\r\n    ? ReadonlyArray<State<U>>\r\n    : S extends object\r\n    ? Omit<\r\n        { readonly [K in keyof Required<S>]: State<S[K]> },\r\n        keyof StateMethods<S> | keyof StateMethodsDestroy\r\n      >\r\n    : {})\r\n\r\n/**\r\n * For plugin developers only.\r\n * Type alias to highlight the places where we are dealing with root state value.\r\n *\r\n * @hidden\r\n * @ignore\r\n */\r\nexport type StateValueAtRoot = any //tslint:disable-line: no-any\r\n/**\r\n * For plugin developers only.\r\n * Type alias to highlight the places where we are dealing with nested state value.\r\n *\r\n * @hidden\r\n * @ignore\r\n */\r\nexport type StateValueAtPath = any //tslint:disable-line: no-any\r\n/**\r\n * For plugin developers only.\r\n * Type alias to highlight the places where we are dealing with state error.\r\n *\r\n * @hidden\r\n * @ignore\r\n */\r\nexport type StateErrorAtRoot = any //tslint:disable-line: no-any\r\n/**\r\n * For plugin developers only.\r\n * Type alias to highlight the places where we are dealing with context value.\r\n *\r\n * @hidden\r\n * @ignore\r\n */\r\nexport type AnyContext = any //tslint:disable-line: no-any\r\n\r\n/**\r\n * For plugin developers only.\r\n * PluginCallbacks.onSet argument type.\r\n */\r\nexport interface PluginCallbacksOnSetArgument {\r\n  readonly path: Path\r\n  readonly state?: StateValueAtRoot\r\n  readonly previous?: StateValueAtPath\r\n  readonly value?: StateValueAtPath\r\n  readonly merged?: StateValueAtPath\r\n}\r\n\r\n/**\r\n * For plugin developers only.\r\n * PluginCallbacks.onDestroy argument type.\r\n */\r\nexport interface PluginCallbacksOnDestroyArgument {\r\n  readonly state?: StateValueAtRoot\r\n}\r\n\r\n/**\r\n * For plugin developers only.\r\n * PluginCallbacks.onBatchStart/Finish argument type.\r\n */\r\nexport interface PluginCallbacksOnBatchArgument {\r\n  readonly path: Path\r\n  readonly state?: StateValueAtRoot\r\n  readonly context?: AnyContext\r\n}\r\n\r\n/**\r\n * For plugin developers only.\r\n * Set of callbacks, a plugin may subscribe to.\r\n *\r\n * [Learn more...](https://hookstate.js.org/docs/writing-plugin)\r\n */\r\nexport interface PluginCallbacks {\r\n  readonly onSet?: (arg: PluginCallbacksOnSetArgument) => void\r\n  readonly onDestroy?: (arg: PluginCallbacksOnDestroyArgument) => void\r\n  readonly onBatchStart?: (arg: PluginCallbacksOnBatchArgument) => void\r\n  readonly onBatchFinish?: (arg: PluginCallbacksOnBatchArgument) => void\r\n}\r\n\r\n/**\r\n * For plugin developers only.\r\n * Hookstate plugin specification and factory method.\r\n *\r\n * [Learn more...](https://hookstate.js.org/docs/writing-plugin)\r\n */\r\nexport interface Plugin {\r\n  /**\r\n   * Unique identifier of a plugin.\r\n   */\r\n  readonly id: symbol\r\n  /**\r\n   * Initializer for a plugin when it is attached for the first time.\r\n   */\r\n  readonly init?: (state: State<StateValueAtRoot>) => PluginCallbacks\r\n}\r\n\r\n/**\r\n * Creates new state and returns it.\r\n *\r\n * You can create as many global states as you need.\r\n *\r\n * When you the state is not needed anymore,\r\n * it should be destroyed by calling\r\n * `destroy()` method of the returned instance.\r\n * This is necessary for some plugins,\r\n * which allocate native resources,\r\n * like subscription to databases, broadcast channels, etc.\r\n * In most cases, a global state is used during\r\n * whole life time of an application and would not require\r\n * destruction. However, if you have got, for example,\r\n * a catalog of dynamically created and destroyed global states,\r\n * the states should be destroyed as advised above.\r\n *\r\n * @param initial Initial value of the state.\r\n * It can be a value OR a promise,\r\n * which asynchronously resolves to a value,\r\n * OR a function returning a value or a promise.\r\n *\r\n * @typeparam S Type of a value of the state\r\n *\r\n * @returns [State](#state) instance,\r\n * which can be used directly to get and set state value\r\n * outside of React components.\r\n * When you need to use the state in a functional `React` component,\r\n * pass the created state to [useState](#usestate) function and\r\n * use the returned result in the component's logic.\r\n */\r\nexport function createState<S>(initial: SetInitialStateAction<S>): State<S> & StateMethodsDestroy {\r\n  const methods = createStore(initial).toMethods()\r\n  const devtools = createState[DevToolsID]\r\n  if (devtools) {\r\n    methods.attach(devtools)\r\n  }\r\n  return methods.self as State<S> & StateMethodsDestroy\r\n}\r\n\r\n/**\r\n * Enables a functional React component to use a state,\r\n * either created by [createState](#createstate) (*global* state) or\r\n * derived from another call to [useState](#usestate) (*scoped* state).\r\n *\r\n * The `useState` forces a component to rerender everytime, when:\r\n * - a segment/part of the state data is updated *AND only if*\r\n * - this segement was **used** by the component during or after the latest rendering.\r\n *\r\n * For example, if the state value is `{ a: 1, b: 2 }` and\r\n * a component uses only `a` property of the state, it will rerender\r\n * only when the whole state object is updated or when `a` property is updated.\r\n * Setting the state value/property to the same value is also considered as an update.\r\n *\r\n * A component can use one or many states,\r\n * i.e. you may call `useState` multiple times for multiple states.\r\n *\r\n * The same state can be used by multiple different components.\r\n *\r\n * @param source a reference to the state to hook into\r\n *\r\n * The `useState` is a hook and should follow React's rules of hooks.\r\n *\r\n * @returns an instance of [State](#state),\r\n * which **must be** used within the component (during rendering\r\n * or in effects) or it's children.\r\n */\r\nexport function useState<S>(source: State<S>): State<S>\r\n/**\r\n * This function enables a functional React component to use a state,\r\n * created per component by [useState](#usestate) (*local* state).\r\n * In this case `useState` behaves similarly to `React.useState`,\r\n * but the returned instance of [State](#state)\r\n * has got more features.\r\n *\r\n * When a state is used by only one component, and maybe it's children,\r\n * it is recommended to use *local* state instead of *global*,\r\n * which is created by [createState](#createstate).\r\n *\r\n * *Local* (per component) state is created when a component is mounted\r\n * and automatically destroyed when a component is unmounted.\r\n *\r\n * The same as with the usage of a *global* state,\r\n * `useState` forces a component to rerender when:\r\n * - a segment/part of the state data is updated *AND only if*\r\n * - this segement was **used** by the component during or after the latest rendering.\r\n *\r\n * You can use as many local states within the same component as you need.\r\n *\r\n * @param source An initial value state.\r\n *\r\n * @returns an instance of [State](#state),\r\n * which **must be** used within the component (during rendering\r\n * or in effects) or it's children.\r\n */\r\nexport function useState<S>(source: SetInitialStateAction<S>): State<S>\r\nexport function useState<S>(source: SetInitialStateAction<S> | State<S>): State<S> {\r\n  const parentMethods =\r\n    typeof source === 'object' && source !== null\r\n      ? (source[self] as StateMethodsImpl<S> | undefined)\r\n      : undefined\r\n  if (parentMethods) {\r\n    if (parentMethods.isMounted) {\r\n      // Scoped state mount\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const [, setValue] = React.useState({})\r\n      return useSubscribedStateMethods<S>(\r\n        parentMethods.state,\r\n        parentMethods.path,\r\n        () => setValue({}),\r\n        parentMethods,\r\n      ).self\r\n    } else {\r\n      // Global state mount or destroyed link\r\n      // eslint-disable-next-line react-hooks/rules-of-hooks\r\n      const [value, setValue] = React.useState({ state: parentMethods.state })\r\n      return useSubscribedStateMethods<S>(\r\n        value.state,\r\n        parentMethods.path,\r\n        () => setValue({ state: value.state }),\r\n        value.state,\r\n      ).self\r\n    }\r\n  } else {\r\n    // Local state mount\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const [value, setValue] = React.useState(() => ({ state: createStore(source) }))\r\n    const result = useSubscribedStateMethods<S>(\r\n      value.state,\r\n      RootPath,\r\n      () => setValue({ state: value.state }),\r\n      value.state,\r\n    )\r\n    React.useEffect(() => () => value.state.destroy(), [])\r\n    const devtools = useState[DevToolsID]\r\n    if (devtools) {\r\n      result.attach(devtools)\r\n    }\r\n    return result.self\r\n  }\r\n}\r\n\r\n/**\r\n * Allows to use a state without defining a functional react component.\r\n * It can be also used in class-based React components. It is also\r\n * particularly usefull for creating *scoped* states.\r\n *\r\n * [Learn more...](https://hookstate.js.org/docs/using-without-statehook)\r\n *\r\n * @typeparam S Type of a value of a state\r\n */\r\nexport function StateFragment<S>(props: {\r\n  state: State<S>\r\n  children: (state: State<S>) => React.ReactElement\r\n}): React.ReactElement\r\n/**\r\n * Allows to use a state without defining a functional react component.\r\n * See more at [StateFragment](#statefragment)\r\n *\r\n * [Learn more...](https://hookstate.js.org/docs/using-without-statehook)\r\n *\r\n * @typeparam S Type of a value of a state\r\n */\r\nexport function StateFragment<S>(props: {\r\n  state: SetInitialStateAction<S>\r\n  children: (state: State<S>) => React.ReactElement\r\n}): React.ReactElement\r\nexport function StateFragment<S>(props: {\r\n  state: State<S> | SetInitialStateAction<S>\r\n  children: (state: State<S>) => React.ReactElement\r\n}): React.ReactElement {\r\n  const scoped = useState(props.state as State<S>)\r\n  return props.children(scoped)\r\n}\r\n\r\n/**\r\n * A plugin which allows to opt-out from usage of Javascript proxies for\r\n * state usage tracking. It is useful for performance tuning.\r\n *\r\n * [Learn more...](https://hookstate.js.org/docs/performance-managed-rendering#downgraded-plugin)\r\n */\r\nexport function Downgraded(): Plugin {\r\n  // tslint:disable-line: function-name\r\n  return {\r\n    id: DowngradedID,\r\n  }\r\n}\r\n\r\n/**\r\n * For plugin developers only.\r\n * Reserved plugin ID for developers tools extension.\r\n *\r\n * @hidden\r\n * @ignore\r\n */\r\nexport const DevToolsID = Symbol('DevTools')\r\n\r\n/**\r\n * Return type of [DevTools](#devtools).\r\n */\r\nexport interface DevToolsExtensions {\r\n  /**\r\n   * Assigns custom label to identify the state in the development tools\r\n   * @param name label for development tools\r\n   */\r\n  label(name: string): void\r\n  /**\r\n   * Logs to the development tools\r\n   */\r\n  log(str: string, data?: any): void // tslint:disable-line: no-any\r\n}\r\n\r\n/**\r\n * Returns access to the development tools for a given state.\r\n * Development tools are delivered as optional plugins.\r\n * You can activate development tools from `@hookstate/devtools`package,\r\n * for example. If no development tools are activated,\r\n * it returns an instance of dummy tools, which do nothing, when called.\r\n *\r\n * [Learn more...](https://hookstate.js.org/docs/devtools)\r\n *\r\n * @param state A state to relate to the extension.\r\n *\r\n * @returns Interface to interact with the development tools for a given state.\r\n *\r\n * @typeparam S Type of a value of a state\r\n */\r\nexport function DevTools<S>(state: State<S>): DevToolsExtensions {\r\n  const plugin = state.attach(DevToolsID)\r\n  if (plugin[0] instanceof Error) {\r\n    return EmptyDevToolsExtensions\r\n  }\r\n  return plugin[0] as DevToolsExtensions\r\n}\r\n\r\n///\r\n/// INTERNAL SYMBOLS (LIBRARY IMPLEMENTATION)\r\n///\r\n\r\nconst self = Symbol('self')\r\n\r\nconst EmptyDevToolsExtensions: DevToolsExtensions = {\r\n  label() {\r\n    /* */\r\n  },\r\n  log() {\r\n    /* */\r\n  },\r\n}\r\n\r\nenum ErrorId {\r\n  InitStateToValueFromState = 101,\r\n  SetStateToValueFromState = 102,\r\n  GetStateWhenPromised = 103,\r\n  SetStateWhenPromised = 104,\r\n  SetStateNestedToPromised = 105,\r\n  SetStateWhenDestroyed = 106,\r\n  GetStatePropertyWhenPrimitive = 107,\r\n  ToJson_Value = 108,\r\n  ToJson_State = 109,\r\n  GetUnknownPlugin = 120,\r\n\r\n  SetProperty_State = 201,\r\n  SetProperty_Value = 202,\r\n  SetPrototypeOf_State = 203,\r\n  SetPrototypeOf_Value = 204,\r\n  PreventExtensions_State = 205,\r\n  PreventExtensions_Value = 206,\r\n  DefineProperty_State = 207,\r\n  DefineProperty_Value = 208,\r\n  DeleteProperty_State = 209,\r\n  DeleteProperty_Value = 210,\r\n  Construct_State = 211,\r\n  Construct_Value = 212,\r\n  Apply_State = 213,\r\n  Apply_Value = 214,\r\n}\r\n\r\nclass StateInvalidUsageError extends Error {\r\n  constructor(path: Path, id: ErrorId, details?: string) {\r\n    super(\r\n      `Error: HOOKSTATE-${id} [path: /${path.join('/')}${\r\n        details ? `, details: ${details}` : ''\r\n      }]. ` + `See https://hookstate.js.org/docs/exceptions#hookstate-${id}`,\r\n    )\r\n  }\r\n}\r\n\r\ninterface Subscriber {\r\n  onSet(paths: Path[], actions: (() => void)[]): void\r\n}\r\n\r\ninterface Subscribable {\r\n  subscribe(l: Subscriber): void\r\n  unsubscribe(l: Subscriber): void\r\n}\r\n\r\nfunction isNoProxyInititializer() {\r\n  try {\r\n    const used = new Proxy({}, {})\r\n    return false\r\n  } catch (e) {\r\n    return true\r\n  }\r\n}\r\nconst IsNoProxy = isNoProxyInititializer()\r\n\r\nconst DowngradedID = Symbol('Downgraded')\r\nconst SelfMethodsID = Symbol('ProxyMarker')\r\n\r\nconst RootPath: Path = []\r\nconst DestroyedEdition = -1\r\n\r\ntype Writeable<T> = { -readonly [P in keyof T]: T[P] }\r\n\r\nclass Store implements Subscribable {\r\n  private _edition: number = 0\r\n\r\n  private _subscribers: Set<Subscriber> = new Set()\r\n  private _setSubscribers: Set<Required<PluginCallbacks>['onSet']> = new Set()\r\n  private _destroySubscribers: Set<Required<PluginCallbacks>['onDestroy']> = new Set()\r\n  private _batchStartSubscribers: Set<Required<PluginCallbacks>['onBatchStart']> = new Set()\r\n  private _batchFinishSubscribers: Set<Required<PluginCallbacks>['onBatchFinish']> = new Set()\r\n\r\n  private _plugins: Map<symbol, PluginCallbacks> = new Map()\r\n\r\n  private _promised?: Promised\r\n\r\n  private _batches = 0\r\n  private _batchesPendingPaths?: Path[]\r\n  private _batchesPendingActions?: (() => void)[]\r\n\r\n  constructor(private _value: StateValueAtRoot) {\r\n    if (typeof _value === 'object' && Promise.resolve(_value) === _value) {\r\n      this._promised = this.createPromised(_value)\r\n      this._value = none\r\n    } else if (_value === none) {\r\n      this._promised = this.createPromised(undefined)\r\n    }\r\n  }\r\n\r\n  createPromised(newValue?: StateValueAtPath) {\r\n    const promised = new Promised(\r\n      newValue ? Promise.resolve(newValue) : undefined,\r\n      (r: StateValueAtPath) => {\r\n        if (this.promised === promised && this.edition !== DestroyedEdition) {\r\n          this._promised = undefined\r\n          this.set(RootPath, r, undefined)\r\n          this.update([RootPath])\r\n        }\r\n      },\r\n      () => {\r\n        if (this.promised === promised && this.edition !== DestroyedEdition) {\r\n          this._edition += 1\r\n          this.update([RootPath])\r\n        }\r\n      },\r\n      () => {\r\n        if (\r\n          this._batchesPendingActions &&\r\n          this._value !== none &&\r\n          this.edition !== DestroyedEdition\r\n        ) {\r\n          const actions = this._batchesPendingActions\r\n          this._batchesPendingActions = undefined\r\n          actions.forEach(a => a())\r\n        }\r\n      },\r\n    )\r\n    return promised\r\n  }\r\n\r\n  get edition() {\r\n    return this._edition\r\n  }\r\n\r\n  get promised() {\r\n    return this._promised\r\n  }\r\n\r\n  get(path: Path) {\r\n    let result = this._value\r\n    if (result === none) {\r\n      return result\r\n    }\r\n    path.forEach(p => {\r\n      result = result[p]\r\n    })\r\n    return result\r\n  }\r\n\r\n  set(\r\n    path: Path,\r\n    value: StateValueAtPath,\r\n    mergeValue: Partial<StateValueAtPath> | undefined,\r\n  ): Path {\r\n    if (this._edition < 0) {\r\n      throw new StateInvalidUsageError(path, ErrorId.SetStateWhenDestroyed)\r\n    }\r\n\r\n    if (path.length === 0) {\r\n      // Root value UPDATE case,\r\n\r\n      const onSetArg: Writeable<PluginCallbacksOnSetArgument> = {\r\n        path: path,\r\n        state: value,\r\n        value: value,\r\n        previous: this._value,\r\n        merged: mergeValue,\r\n      }\r\n      if (value === none) {\r\n        this._promised = this.createPromised(undefined)\r\n        delete onSetArg.value\r\n        delete onSetArg.state\r\n      } else if (typeof value === 'object' && Promise.resolve(value) === value) {\r\n        this._promised = this.createPromised(value)\r\n        value = none\r\n        delete onSetArg.value\r\n        delete onSetArg.state\r\n      } else if (this._promised && !this._promised.resolver && !this._promised.fullfilled) {\r\n        throw new StateInvalidUsageError(path, ErrorId.SetStateWhenPromised)\r\n      }\r\n\r\n      let prevValue = this._value\r\n      if (prevValue === none) {\r\n        delete onSetArg.previous\r\n      }\r\n      this._value = value\r\n      this.afterSet(onSetArg)\r\n\r\n      if (prevValue === none && this._value !== none && this.promised && this.promised.resolver) {\r\n        this.promised.resolver()\r\n      }\r\n\r\n      return path\r\n    }\r\n\r\n    if (typeof value === 'object' && Promise.resolve(value) === value) {\r\n      throw new StateInvalidUsageError(path, ErrorId.SetStateNestedToPromised)\r\n    }\r\n\r\n    let target = this._value\r\n    for (let i = 0; i < path.length - 1; i += 1) {\r\n      target = target[path[i]]\r\n    }\r\n\r\n    const p = path[path.length - 1]\r\n    if (p in target) {\r\n      if (value !== none) {\r\n        // Property UPDATE case\r\n        let prevValue = target[p]\r\n        target[p] = value\r\n        this.afterSet({\r\n          path: path,\r\n          state: this._value,\r\n          value: value,\r\n          previous: prevValue,\r\n          merged: mergeValue,\r\n        })\r\n\r\n        return path\r\n      } else {\r\n        // Property DELETE case\r\n        let prevValue = target[p]\r\n        if (Array.isArray(target) && typeof p === 'number') {\r\n          target.splice(p, 1)\r\n        } else {\r\n          delete target[p]\r\n        }\r\n        this.afterSet({\r\n          path: path,\r\n          state: this._value,\r\n          previous: prevValue,\r\n          merged: mergeValue,\r\n        })\r\n\r\n        // if an array of object is about to loose existing property\r\n        // we consider it is the whole object is changed\r\n        // which is identified by upper path\r\n        return path.slice(0, -1)\r\n      }\r\n    }\r\n\r\n    if (value !== none) {\r\n      // Property INSERT case\r\n      target[p] = value\r\n      this.afterSet({\r\n        path: path,\r\n        state: this._value,\r\n        value: value,\r\n        merged: mergeValue,\r\n      })\r\n\r\n      // if an array of object is about to be extended by new property\r\n      // we consider it is the whole object is changed\r\n      // which is identified by upper path\r\n      return path.slice(0, -1)\r\n    }\r\n\r\n    // Non-existing property DELETE case\r\n    // no-op\r\n    return path\r\n  }\r\n\r\n  update(paths: Path[]) {\r\n    if (this._batches) {\r\n      this._batchesPendingPaths = this._batchesPendingPaths || []\r\n      this._batchesPendingPaths = this._batchesPendingPaths.concat(paths)\r\n      return\r\n    }\r\n\r\n    const actions: (() => void)[] = []\r\n    this._subscribers.forEach(s => s.onSet(paths, actions))\r\n    actions.forEach(a => a())\r\n  }\r\n\r\n  afterSet(params: PluginCallbacksOnSetArgument) {\r\n    if (this._edition !== DestroyedEdition) {\r\n      this._edition += 1\r\n      this._setSubscribers.forEach(cb => cb(params))\r\n    }\r\n  }\r\n\r\n  startBatch(path: Path, options?: { context?: AnyContext }): void {\r\n    this._batches += 1\r\n\r\n    const cbArgument: Writeable<PluginCallbacksOnBatchArgument> = {\r\n      path: path,\r\n    }\r\n    if (options && 'context' in options) {\r\n      cbArgument.context = options.context\r\n    }\r\n    if (this._value !== none) {\r\n      cbArgument.state = this._value\r\n    }\r\n    this._batchStartSubscribers.forEach(cb => cb(cbArgument))\r\n  }\r\n\r\n  finishBatch(path: Path, options?: { context?: AnyContext }): void {\r\n    const cbArgument: Writeable<PluginCallbacksOnBatchArgument> = {\r\n      path: path,\r\n    }\r\n    if (options && 'context' in options) {\r\n      cbArgument.context = options.context\r\n    }\r\n    if (this._value !== none) {\r\n      cbArgument.state = this._value\r\n    }\r\n    this._batchFinishSubscribers.forEach(cb => cb(cbArgument))\r\n\r\n    this._batches -= 1\r\n    if (this._batches === 0) {\r\n      if (this._batchesPendingPaths) {\r\n        const paths = this._batchesPendingPaths\r\n        this._batchesPendingPaths = undefined\r\n        this.update(paths)\r\n      }\r\n    }\r\n  }\r\n\r\n  postponeBatch(action: () => void): void {\r\n    this._batchesPendingActions = this._batchesPendingActions || []\r\n    this._batchesPendingActions.push(action)\r\n  }\r\n\r\n  getPlugin(pluginId: symbol) {\r\n    return this._plugins.get(pluginId)\r\n  }\r\n\r\n  register(plugin: Plugin) {\r\n    const existingInstance = this._plugins.get(plugin.id)\r\n    if (existingInstance) {\r\n      return\r\n    }\r\n\r\n    const pluginCallbacks = plugin.init ? plugin.init(this.toMethods().self) : {}\r\n    this._plugins.set(plugin.id, pluginCallbacks)\r\n    if (pluginCallbacks.onSet) {\r\n      this._setSubscribers.add(p => pluginCallbacks.onSet!(p))\r\n    }\r\n    if (pluginCallbacks.onDestroy) {\r\n      this._destroySubscribers.add(p => pluginCallbacks.onDestroy!(p))\r\n    }\r\n    if (pluginCallbacks.onBatchStart) {\r\n      this._batchStartSubscribers.add(p => pluginCallbacks.onBatchStart!(p))\r\n    }\r\n    if (pluginCallbacks.onBatchFinish) {\r\n      this._batchFinishSubscribers.add(p => pluginCallbacks.onBatchFinish!(p))\r\n    }\r\n  }\r\n\r\n  toMethods() {\r\n    return new StateMethodsImpl<StateValueAtRoot>(\r\n      this,\r\n      RootPath,\r\n      this.get(RootPath),\r\n      this.edition,\r\n      OnSetUsedNoAction,\r\n    )\r\n  }\r\n\r\n  subscribe(l: Subscriber) {\r\n    this._subscribers.add(l)\r\n  }\r\n\r\n  unsubscribe(l: Subscriber) {\r\n    this._subscribers.delete(l)\r\n  }\r\n\r\n  destroy() {\r\n    this._destroySubscribers.forEach(cb => cb(this._value !== none ? { state: this._value } : {}))\r\n    this._edition = DestroyedEdition\r\n  }\r\n\r\n  toJSON() {\r\n    throw new StateInvalidUsageError(RootPath, ErrorId.ToJson_Value)\r\n  }\r\n}\r\n\r\nclass Promised {\r\n  public fullfilled?: true\r\n  public error?: StateErrorAtRoot\r\n  public resolver?: () => void\r\n\r\n  constructor(\r\n    public promise: Promise<StateValueAtPath> | undefined,\r\n    onResolve: (r: StateValueAtPath) => void,\r\n    onReject: () => void,\r\n    onPostResolve: () => void,\r\n  ) {\r\n    if (!promise) {\r\n      promise = new Promise<StateValueAtRoot>(resolve => {\r\n        this.resolver = resolve\r\n      })\r\n    }\r\n    this.promise = promise\r\n      .then(r => {\r\n        this.fullfilled = true\r\n        if (!this.resolver) {\r\n          onResolve(r)\r\n        }\r\n      })\r\n      .catch(err => {\r\n        this.fullfilled = true\r\n        this.error = err\r\n        onReject()\r\n      })\r\n      .then(() => onPostResolve())\r\n  }\r\n}\r\n\r\n// use symbol property to allow for easier reference finding\r\nconst ValueUnusedMarker = Symbol('ValueUnusedMarker')\r\n\r\nfunction OnSetUsedNoAction() {\r\n  /** no action callback */\r\n}\r\n\r\n// use symbol to mark that a function has no effect anymore\r\nconst UnmountedMarker = Symbol('UnmountedMarker')\r\nOnSetUsedNoAction[UnmountedMarker] = true\r\n\r\nclass StateMethodsImpl<S>\r\n  implements StateMethods<S>, StateMethodsDestroy, Subscribable, Subscriber {\r\n  private subscribers: Set<Subscriber> | undefined\r\n\r\n  private isDowngraded: boolean | undefined\r\n  private childrenCache: Record<string | number, StateMethodsImpl<StateValueAtPath>> | undefined\r\n  private selfCache: State<S> | undefined\r\n  private valueCache: StateValueAtPath = ValueUnusedMarker\r\n\r\n  constructor(\r\n    public readonly state: Store,\r\n    public readonly path: Path,\r\n    private valueSource: S,\r\n    private valueEdition: number,\r\n    private readonly onSetUsed: () => void,\r\n  ) {}\r\n\r\n  getUntracked(allowPromised?: boolean) {\r\n    if (this.valueEdition !== this.state.edition) {\r\n      this.valueSource = this.state.get(this.path)\r\n      this.valueEdition = this.state.edition\r\n\r\n      if (this.isMounted) {\r\n        // this link is still mounted to a component\r\n        // populate cache again to ensure correct tracking of usage\r\n        // when React scans which states to rerender on update\r\n        if (this.valueCache !== ValueUnusedMarker) {\r\n          this.valueCache = ValueUnusedMarker\r\n          this.get(true) // renew cache to keep it marked used\r\n        }\r\n      } else {\r\n        // This link is not mounted to a component\r\n        // for example, it might be global link or\r\n        // a link which has been discarded after rerender\r\n        // but still captured by some callback or an effect.\r\n        // If we are here and if it was mounted before,\r\n        // it means it has not been garbage collected\r\n        // when a component unmounted.\r\n        // We take this opportunity to clean up caches\r\n        // to avoid memory leaks via stale children states cache.\r\n        this.valueCache = ValueUnusedMarker\r\n        delete this.childrenCache\r\n        delete this.selfCache\r\n      }\r\n    }\r\n    if (this.valueSource === none && !allowPromised) {\r\n      if (this.state.promised && this.state.promised.error) {\r\n        throw this.state.promised.error\r\n      }\r\n      throw new StateInvalidUsageError(this.path, ErrorId.GetStateWhenPromised)\r\n    }\r\n    return this.valueSource\r\n  }\r\n\r\n  get(allowPromised?: boolean) {\r\n    const currentValue = this.getUntracked(allowPromised)\r\n    if (this.valueCache === ValueUnusedMarker) {\r\n      if (this.isDowngraded) {\r\n        this.valueCache = currentValue\r\n      } else if (Array.isArray(currentValue)) {\r\n        this.valueCache = this.valueArrayImpl(currentValue)\r\n      } else if (typeof currentValue === 'object' && currentValue !== null) {\r\n        this.valueCache = this.valueObjectImpl((currentValue as unknown) as object)\r\n      } else {\r\n        this.valueCache = currentValue\r\n      }\r\n    }\r\n    return this.valueCache as S\r\n  }\r\n\r\n  get value(): S {\r\n    return this.get()\r\n  }\r\n\r\n  setUntracked(newValue: SetStateAction<S>, mergeValue?: Partial<StateValueAtPath>): [Path] {\r\n    if (typeof newValue === 'function') {\r\n      newValue = (newValue as (prevValue: S) => S)(this.getUntracked())\r\n    }\r\n    if (typeof newValue === 'object' && newValue !== null && newValue[SelfMethodsID]) {\r\n      throw new StateInvalidUsageError(this.path, ErrorId.SetStateToValueFromState)\r\n    }\r\n    return [this.state.set(this.path, newValue, mergeValue)]\r\n  }\r\n\r\n  set(newValue: SetStateAction<S>) {\r\n    this.state.update(this.setUntracked(newValue))\r\n  }\r\n\r\n  mergeUntracked(sourceValue: SetPartialStateAction<S>): Path[] {\r\n    const currentValue = this.getUntracked()\r\n    if (typeof sourceValue === 'function') {\r\n      sourceValue = (sourceValue as Function)(currentValue)\r\n    }\r\n\r\n    let updatedPaths: [Path]\r\n    let deletedOrInsertedProps = false\r\n\r\n    if (Array.isArray(currentValue)) {\r\n      if (Array.isArray(sourceValue)) {\r\n        return this.setUntracked((currentValue.concat(sourceValue) as unknown) as S, sourceValue)\r\n      } else {\r\n        const deletedIndexes: number[] = []\r\n        Object.keys(sourceValue)\r\n          .sort()\r\n          .forEach(i => {\r\n            const index = Number(i)\r\n            const newPropValue = sourceValue[index]\r\n            if (newPropValue === none) {\r\n              deletedOrInsertedProps = true\r\n              deletedIndexes.push(index)\r\n            } else {\r\n              deletedOrInsertedProps = deletedOrInsertedProps || !(index in currentValue)\r\n              currentValue[index] = newPropValue\r\n            }\r\n          })\r\n        // indexes are ascending sorted as per above\r\n        // so, delete one by one from the end\r\n        // this way index positions do not change\r\n        deletedIndexes.reverse().forEach(p => {\r\n          ;((currentValue as unknown) as []).splice(p, 1)\r\n        })\r\n        updatedPaths = this.setUntracked(currentValue, sourceValue)\r\n      }\r\n    } else if (typeof currentValue === 'object' && currentValue !== null) {\r\n      Object.keys(sourceValue).forEach(key => {\r\n        const newPropValue = sourceValue[key]\r\n        if (newPropValue === none) {\r\n          deletedOrInsertedProps = true\r\n          delete currentValue[key]\r\n        } else {\r\n          deletedOrInsertedProps = deletedOrInsertedProps || !(key in currentValue)\r\n          currentValue[key] = newPropValue\r\n        }\r\n      })\r\n      updatedPaths = this.setUntracked(currentValue, sourceValue)\r\n    } else if (typeof currentValue === 'string') {\r\n      return this.setUntracked(((currentValue + String(sourceValue)) as unknown) as S, sourceValue)\r\n    } else {\r\n      return this.setUntracked(sourceValue as S)\r\n    }\r\n\r\n    if (updatedPaths.length !== 1 || updatedPaths[0] !== this.path || deletedOrInsertedProps) {\r\n      return updatedPaths\r\n    }\r\n    const updatedPath = updatedPaths[0]\r\n    return Object.keys(sourceValue).map(p => updatedPath.slice().concat(p))\r\n  }\r\n\r\n  merge(sourceValue: SetPartialStateAction<S>) {\r\n    this.state.update(this.mergeUntracked(sourceValue))\r\n  }\r\n\r\n  nested<K extends keyof S>(key: K): State<S[K]> {\r\n    return this.child(key as string | number).self as State<S[K]>\r\n  }\r\n\r\n  rerender(paths: Path[]) {\r\n    this.state.update(paths)\r\n  }\r\n\r\n  destroy(): void {\r\n    this.state.destroy()\r\n  }\r\n\r\n  subscribe(l: Subscriber) {\r\n    if (this.subscribers === undefined) {\r\n      this.subscribers = new Set()\r\n    }\r\n    this.subscribers.add(l)\r\n  }\r\n\r\n  unsubscribe(l: Subscriber) {\r\n    this.subscribers!.delete(l)\r\n  }\r\n\r\n  get isMounted(): boolean {\r\n    return !this.onSetUsed[UnmountedMarker]\r\n  }\r\n\r\n  onUnmount() {\r\n    this.onSetUsed[UnmountedMarker] = true\r\n  }\r\n\r\n  onSet(paths: Path[], actions: (() => void)[]): boolean {\r\n    const update = () => {\r\n      if (this.isDowngraded && this.valueCache !== ValueUnusedMarker) {\r\n        actions.push(this.onSetUsed)\r\n        return true\r\n      }\r\n      for (let path of paths) {\r\n        const firstChildKey = path[this.path.length]\r\n        if (firstChildKey === undefined) {\r\n          if (this.valueCache !== ValueUnusedMarker) {\r\n            actions.push(this.onSetUsed)\r\n            return true\r\n          }\r\n        } else {\r\n          const firstChildValue = this.childrenCache && this.childrenCache[firstChildKey]\r\n          if (firstChildValue && firstChildValue.onSet(paths, actions)) {\r\n            return true\r\n          }\r\n        }\r\n      }\r\n      return false\r\n    }\r\n\r\n    const updated = update()\r\n    if (!updated && this.subscribers !== undefined) {\r\n      this.subscribers.forEach(s => {\r\n        s.onSet(paths, actions)\r\n      })\r\n    }\r\n    return updated\r\n  }\r\n\r\n  get keys(): InferredStateKeysType<S> {\r\n    const value = this.get()\r\n    if (Array.isArray(value)) {\r\n      return (Object.keys(value)\r\n        .map(i => Number(i))\r\n        .filter(i => Number.isInteger(i)) as unknown) as InferredStateKeysType<S>\r\n    }\r\n    if (typeof value === 'object' && value !== null) {\r\n      return (Object.keys(value) as unknown) as InferredStateKeysType<S>\r\n    }\r\n    return undefined as InferredStateKeysType<S>\r\n  }\r\n\r\n  child(key: number | string) {\r\n    // if this state is not mounted to a hook,\r\n    // we do not cache children to avoid unnecessary memory leaks\r\n    if (this.isMounted) {\r\n      this.childrenCache = this.childrenCache || {}\r\n      const cachehit = this.childrenCache[key]\r\n      if (cachehit) {\r\n        return cachehit\r\n      }\r\n    }\r\n    const r = new StateMethodsImpl(\r\n      this.state,\r\n      this.path.slice().concat(key),\r\n      this.valueSource[key],\r\n      this.valueEdition,\r\n      this.onSetUsed,\r\n    )\r\n    if (this.isDowngraded) {\r\n      r.isDowngraded = true\r\n    }\r\n    if (this.childrenCache) {\r\n      this.childrenCache[key] = r\r\n    }\r\n    return r\r\n  }\r\n\r\n  private valueArrayImpl(currentValue: StateValueAtPath[]): S {\r\n    if (IsNoProxy) {\r\n      this.isDowngraded = true\r\n      return (currentValue as unknown) as S\r\n    }\r\n    return (proxyWrap(\r\n      this.path,\r\n      currentValue,\r\n      () => currentValue,\r\n      (target: object, key: PropertyKey) => {\r\n        if (key === 'length') {\r\n          return (target as []).length\r\n        }\r\n        if (key in Array.prototype) {\r\n          return Array.prototype[key]\r\n        }\r\n        if (key === SelfMethodsID) {\r\n          return this\r\n        }\r\n        if (typeof key === 'symbol') {\r\n          // allow clients to associate hidden cache with state values\r\n          return target[key]\r\n        }\r\n        const index = Number(key)\r\n        if (!Number.isInteger(index)) {\r\n          return undefined\r\n        }\r\n        return this.child(index).get()\r\n      },\r\n      (target: object, key: PropertyKey, value: StateValueAtPath) => {\r\n        if (typeof key === 'symbol') {\r\n          // allow clients to associate hidden cache with state values\r\n          target[key] = value\r\n          return true\r\n        }\r\n        throw new StateInvalidUsageError(this.path, ErrorId.SetProperty_Value)\r\n      },\r\n      true,\r\n    ) as unknown) as S\r\n  }\r\n\r\n  private valueObjectImpl(currentValue: object): S {\r\n    if (IsNoProxy) {\r\n      this.isDowngraded = true\r\n      return (currentValue as unknown) as S\r\n    }\r\n    return (proxyWrap(\r\n      this.path,\r\n      currentValue,\r\n      () => currentValue,\r\n      (target: object, key: PropertyKey) => {\r\n        if (key === SelfMethodsID) {\r\n          return this\r\n        }\r\n        if (typeof key === 'symbol') {\r\n          // allow clients to associate hidden cache with state values\r\n          return target[key]\r\n        }\r\n        return this.child(key).get()\r\n      },\r\n      (target: object, key: PropertyKey, value: StateValueAtPath) => {\r\n        if (typeof key === 'symbol') {\r\n          // allow clients to associate hidden cache with state values\r\n          target[key] = value\r\n          return true\r\n        }\r\n        throw new StateInvalidUsageError(this.path, ErrorId.SetProperty_Value)\r\n      },\r\n      true,\r\n    ) as unknown) as S\r\n  }\r\n\r\n  get self(): State<S> {\r\n    if (this.selfCache) {\r\n      return this.selfCache\r\n    }\r\n\r\n    const getter = (_: object, key: PropertyKey) => {\r\n      if (key === self) {\r\n        return this\r\n      }\r\n      if (typeof key === 'symbol') {\r\n        return undefined\r\n      }\r\n      if (key === 'toJSON') {\r\n        throw new StateInvalidUsageError(this.path, ErrorId.ToJson_State)\r\n      }\r\n\r\n      switch (key) {\r\n        case 'path':\r\n          return this.path\r\n        case 'keys':\r\n          return this.keys\r\n        case 'value':\r\n          return this.value\r\n        case 'ornull':\r\n          return this.ornull\r\n        case 'promised':\r\n          return this.promised\r\n        case 'error':\r\n          return this.error\r\n        case 'get':\r\n          return () => this.get()\r\n        case 'set':\r\n          return (p: SetStateAction<S>) => this.set(p)\r\n        case 'merge':\r\n          return (p: SetPartialStateAction<S>) => this.merge(p)\r\n        case 'nested':\r\n          return (p: keyof S) => this.nested(p)\r\n        case 'batch':\r\n          // tslint:disable-next-line: no-any\r\n          return <R, C>(action: () => R, context: Exclude<C, Function>) =>\r\n            this.batch(action, context)\r\n        case 'attach':\r\n          return (p: symbol) => this.attach(p)\r\n        case 'destroy': {\r\n          return () => this.destroy()\r\n        }\r\n        default:\r\n        // fall down\r\n      }\r\n\r\n      const currentDowngraded = this.isDowngraded // relevant for IE11 only\r\n      const currentValue = this.get() // IE11 marks this as downgraded\r\n      this.isDowngraded = currentDowngraded // relevant for IE11 only\r\n      if (\r\n        // if currentValue is primitive type\r\n        (typeof currentValue !== 'object' || currentValue === null) &&\r\n        // if promised, it will be none\r\n        currentValue !== none\r\n      ) {\r\n        throw new StateInvalidUsageError(this.path, ErrorId.GetStatePropertyWhenPrimitive)\r\n      }\r\n\r\n      if (Array.isArray(currentValue)) {\r\n        if (key === 'length') {\r\n          return currentValue.length\r\n        }\r\n        if (key in Array.prototype) {\r\n          return Array.prototype[key]\r\n        }\r\n        const index = Number(key)\r\n        if (!Number.isInteger(index)) {\r\n          return undefined\r\n        }\r\n        return this.nested(index as keyof S)\r\n      }\r\n      return this.nested(key.toString() as keyof S)\r\n    }\r\n\r\n    if (IsNoProxy) {\r\n      // minimal support for IE11\r\n      const result = (Array.isArray(this.valueSource) ? [] : {}) as State<S>\r\n      ;[\r\n        self,\r\n        'toJSON',\r\n        'path',\r\n        'keys',\r\n        'value',\r\n        'ornull',\r\n        'promised',\r\n        'error',\r\n        'get',\r\n        'set',\r\n        'merge',\r\n        'nested',\r\n        'batch',\r\n        'attach',\r\n        'destroy',\r\n      ].forEach(key => {\r\n        Object.defineProperty(result, key, {\r\n          get: () => getter(result, key),\r\n        })\r\n      })\r\n      if (typeof this.valueSource === 'object' && this.valueSource !== null) {\r\n        Object.keys(this.valueSource).forEach(key => {\r\n          Object.defineProperty(result, key, {\r\n            enumerable: true,\r\n            get: () => getter(result, key),\r\n          })\r\n        })\r\n      }\r\n      this.selfCache = result\r\n      return this.selfCache\r\n    }\r\n\r\n    this.selfCache = (proxyWrap(\r\n      this.path,\r\n      this.valueSource,\r\n      () => {\r\n        this.get() // get latest & mark used\r\n        return this.valueSource\r\n      },\r\n      getter,\r\n      (_, key, value) => {\r\n        throw new StateInvalidUsageError(this.path, ErrorId.SetProperty_State)\r\n      },\r\n      false,\r\n    ) as unknown) as State<S>\r\n    return this.selfCache\r\n  }\r\n\r\n  get promised(): boolean {\r\n    const currentValue = this.get(true) // marks used\r\n    if (currentValue === none && this.state.promised && !this.state.promised.fullfilled) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  get error(): StateErrorAtRoot | undefined {\r\n    const currentValue = this.get(true) // marks used\r\n    if (currentValue === none) {\r\n      if (this.state.promised && this.state.promised.fullfilled) {\r\n        return this.state.promised.error\r\n      }\r\n      this.get() // will throw 'read while promised' exception\r\n    }\r\n    return undefined\r\n  }\r\n\r\n  batch<R, C>(action: (s: State<S>) => R, context?: Exclude<C, Function>): R {\r\n    const opts = { context: context }\r\n    try {\r\n      this.state.startBatch(this.path, opts)\r\n      const result = action(this.self) as R\r\n      if (((result as unknown) as Symbol) === postpone) {\r\n        this.state.postponeBatch(() => this.batch(action, context))\r\n      }\r\n      return result\r\n    } finally {\r\n      this.state.finishBatch(this.path, opts)\r\n    }\r\n  }\r\n\r\n  get ornull(): InferredStateOrnullType<S> {\r\n    const value = this.get()\r\n    if (value === null || value === undefined) {\r\n      return (value as unknown) as InferredStateOrnullType<S>\r\n    }\r\n    return this.self as InferredStateOrnullType<S>\r\n  }\r\n\r\n  attach(plugin: () => Plugin): State<S>\r\n  attach(pluginId: symbol): [PluginCallbacks | Error, PluginStateControl<S>]\r\n  attach(p: (() => Plugin) | symbol): State<S> | [PluginCallbacks | Error, PluginStateControl<S>] {\r\n    if (typeof p === 'function') {\r\n      const pluginMeta = p()\r\n      if (pluginMeta.id === DowngradedID) {\r\n        this.isDowngraded = true\r\n        return this.self\r\n      }\r\n      this.state.register(pluginMeta)\r\n      return this.self\r\n    } else {\r\n      return [\r\n        this.state.getPlugin(p) ||\r\n          new StateInvalidUsageError(this.path, ErrorId.GetUnknownPlugin, p.toString()),\r\n        this,\r\n      ]\r\n    }\r\n  }\r\n}\r\n\r\nfunction proxyWrap(\r\n  path: Path,\r\n  // tslint:disable-next-line: no-any\r\n  targetBootstrap: any,\r\n  // tslint:disable-next-line: no-any\r\n  targetGetter: () => any,\r\n  // tslint:disable-next-line: no-any\r\n  propertyGetter: (unused: any, key: PropertyKey) => any,\r\n  // tslint:disable-next-line: no-any\r\n  propertySetter: (unused: any, p: PropertyKey, value: any, receiver: any) => boolean,\r\n  isValueProxy: boolean,\r\n) {\r\n  const onInvalidUsage = (op: ErrorId) => {\r\n    throw new StateInvalidUsageError(path, op)\r\n  }\r\n  if (typeof targetBootstrap !== 'object' || targetBootstrap === null) {\r\n    targetBootstrap = {}\r\n  }\r\n  return new Proxy(targetBootstrap, {\r\n    getPrototypeOf: target => {\r\n      // should satisfy the invariants:\r\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/getPrototypeOf#Invariants\r\n      const targetReal = targetGetter()\r\n      if (targetReal === undefined || targetReal === null) {\r\n        return null\r\n      }\r\n      return Object.getPrototypeOf(targetReal)\r\n    },\r\n    setPrototypeOf: (target, v) => {\r\n      return onInvalidUsage(\r\n        isValueProxy ? ErrorId.SetPrototypeOf_State : ErrorId.SetPrototypeOf_Value,\r\n      )\r\n    },\r\n    isExtensible: target => {\r\n      // should satisfy the invariants:\r\n      // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/handler/isExtensible#Invariants\r\n      return true // required to satisfy the invariants of the getPrototypeOf\r\n      // return Object.isExtensible(target);\r\n    },\r\n    preventExtensions: target => {\r\n      return onInvalidUsage(\r\n        isValueProxy ? ErrorId.PreventExtensions_State : ErrorId.PreventExtensions_Value,\r\n      )\r\n    },\r\n    getOwnPropertyDescriptor: (target, p) => {\r\n      const targetReal = targetGetter()\r\n      if (targetReal === undefined || targetReal === null) {\r\n        return undefined\r\n      }\r\n      const origin = Object.getOwnPropertyDescriptor(targetReal, p)\r\n      if (origin && Array.isArray(targetReal) && p in Array.prototype) {\r\n        return origin\r\n      }\r\n      return (\r\n        origin && {\r\n          configurable: true, // JSON.stringify() does not work for an object without it\r\n          enumerable: origin.enumerable,\r\n          get: () => propertyGetter(targetReal, p),\r\n          set: undefined,\r\n        }\r\n      )\r\n    },\r\n    has: (target, p) => {\r\n      if (typeof p === 'symbol') {\r\n        return false\r\n      }\r\n      const targetReal = targetGetter()\r\n      if (typeof targetReal === 'object' && targetReal !== null) {\r\n        return p in targetReal\r\n      }\r\n      return false\r\n    },\r\n    get: propertyGetter,\r\n    set: propertySetter,\r\n    deleteProperty: (target, p) => {\r\n      return onInvalidUsage(\r\n        isValueProxy ? ErrorId.DeleteProperty_State : ErrorId.DeleteProperty_Value,\r\n      )\r\n    },\r\n    defineProperty: (target, p, attributes) => {\r\n      return onInvalidUsage(\r\n        isValueProxy ? ErrorId.DefineProperty_State : ErrorId.DefineProperty_Value,\r\n      )\r\n    },\r\n    enumerate: target => {\r\n      const targetReal = targetGetter()\r\n      if (Array.isArray(targetReal)) {\r\n        return Object.keys(targetReal).concat('length')\r\n      }\r\n      if (targetReal === undefined || targetReal === null) {\r\n        return []\r\n      }\r\n      return Object.keys(targetReal)\r\n    },\r\n    ownKeys: target => {\r\n      const targetReal = targetGetter()\r\n      if (Array.isArray(targetReal)) {\r\n        return Object.keys(targetReal).concat('length')\r\n      }\r\n      if (targetReal === undefined || targetReal === null) {\r\n        return []\r\n      }\r\n      return Object.keys(targetReal)\r\n    },\r\n    apply: (target, thisArg, argArray?) => {\r\n      return onInvalidUsage(isValueProxy ? ErrorId.Apply_State : ErrorId.Apply_Value)\r\n    },\r\n    construct: (target, argArray, newTarget?) => {\r\n      return onInvalidUsage(isValueProxy ? ErrorId.Construct_State : ErrorId.Construct_Value)\r\n    },\r\n  })\r\n}\r\n\r\nfunction createStore<S>(initial: SetInitialStateAction<S>): Store {\r\n  let initialValue: S | Promise<S> = initial as S | Promise<S>\r\n  if (typeof initial === 'function') {\r\n    initialValue = (initial as () => S | Promise<S>)()\r\n  }\r\n  if (typeof initialValue === 'object' && initialValue !== null && initialValue[SelfMethodsID]) {\r\n    throw new StateInvalidUsageError(RootPath, ErrorId.InitStateToValueFromState)\r\n  }\r\n  return new Store(initialValue)\r\n}\r\n\r\nfunction useSubscribedStateMethods<S>(\r\n  state: Store,\r\n  path: Path,\r\n  update: () => void,\r\n  subscribeTarget: Subscribable,\r\n) {\r\n  const link = new StateMethodsImpl<S>(state, path, state.get(path), state.edition, update)\r\n  React.useEffect(() => {\r\n    subscribeTarget.subscribe(link)\r\n    return () => {\r\n      link.onUnmount()\r\n      subscribeTarget.unsubscribe(link)\r\n    }\r\n  })\r\n  return link\r\n}\r\n"],"names":[],"mappings":"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"}